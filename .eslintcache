[{"F:\\project\\signupform\\src\\index.js":"1","F:\\project\\signupform\\src\\components\\signupform.jsx":"2","F:\\project\\signupform\\src\\components\\companyinfoform.jsx":"3","F:\\project\\signupform\\src\\components\\foodmanufacturer.jsx":"4","F:\\project\\signupform\\src\\App.js":"5","F:\\project\\signupform\\src\\components\\sigininform.jsx":"6","F:\\project\\signupform\\src\\components\\homepage.jsx":"7","F:\\project\\signupform\\src\\Routes.jsx":"8"},{"size":460,"mtime":1608179627899,"results":"9","hashOfConfig":"10"},{"size":3984,"mtime":1607627352139,"results":"11","hashOfConfig":"10"},{"size":2752,"mtime":1607413433128,"results":"12","hashOfConfig":"10"},{"size":3598,"mtime":1607413658681,"results":"13","hashOfConfig":"10"},{"size":5831,"mtime":1607760533248,"results":"14","hashOfConfig":"10"},{"size":8968,"mtime":1608028063854,"results":"15","hashOfConfig":"10"},{"size":1430,"mtime":1607627255613,"results":"16","hashOfConfig":"10"},{"size":544,"mtime":1607624099124,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wobz96",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},"F:\\project\\signupform\\src\\index.js",["38","39","40","41","42","43","44","45"],"F:\\project\\signupform\\src\\components\\signupform.jsx",[],["46","47"],"F:\\project\\signupform\\src\\components\\companyinfoform.jsx",[],"F:\\project\\signupform\\src\\components\\foodmanufacturer.jsx",[],"F:\\project\\signupform\\src\\App.js",[],"F:\\project\\signupform\\src\\components\\sigininform.jsx",["48","49","50"],"import React from 'react'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button'\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText'\r\nimport Joi from 'joi-browser'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\"\r\n    },\r\n    margin: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    withoutLabel: {\r\n        marginTop: theme.spacing(3)\r\n    },\r\n    textField: {\r\n        width: \"25ch\"\r\n    }\r\n}));\r\n\r\nconst schema = {\r\n    firstname: Joi.string().required(),\r\n    lastname: Joi.string().required(),\r\n    password: Joi.string().required().min(8),\r\n    email: Joi.string().required().email({ minDomainSegments: 2, tlds: { allow: ['com', 'net'] } }),\r\n}\r\n\r\nconst SigninFrom = () => {\r\n\r\n\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        password: \"\",\r\n        confirmpassword: '',\r\n        showPassword: false,\r\n        showConfirmPassword: false,\r\n    });\r\n    const [Error, setError] = React.useState({\r\n        Error: false,\r\n        value: '',\r\n        firstname: '',\r\n        lastname: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    const handleChange = (prop) => (event) => {\r\n\r\n\r\n        setValues({ ...values, [prop]: event.target.value });\r\n        const obj = { [prop]: event.target.value }\r\n        const schema1 = { [prop]: schema[prop] }\r\n        const { error } = Joi.validate(obj, schema1)\r\n        const res = error ? error.details[0].message : null\r\n        setError({ ...Error, [prop]: res, })\r\n\r\n    };\r\n    const handleChangeConfirmPassword = (prop) => (event) => {\r\n        const val = event.target.value\r\n        setValues({ ...values, [prop]: event.target.value })\r\n        changeError(val)\r\n    };\r\n\r\n    const changeError = (val) => {\r\n        if (values.password !== val) {\r\n            setError({ ...Error, Error: true, value: 'password dosent match' })\r\n        } else {\r\n            setError({ ...Error, Error: false, value: null })\r\n\r\n        }\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        setValues({ ...values, showPassword: !values.showPassword });\r\n    };\r\n    const handleClickShowConfirmPassword = () => {\r\n        setValues({ ...values, showConfirmPassword: !values.showConfirmPassword });\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n    const handleDisabled = () => {\r\n        console.log(Error)\r\n        if (Error.firstname === null && Error.lastname === null && Error.password === null && Error.email === null && Error.value === null) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n\r\n    return (<React.Fragment>\r\n        <Grid container\r\n            spacing={5}\r\n            direction=\"column\"\r\n            justify='center'\r\n            alignItems='center'\r\n        >\r\n            <h2 Style='color:blue'>Create Your Account</h2>\r\n\r\n\r\n            <Grid item xs={12}>\r\n                <TextField style={{ minWidth: 325, maxWidth: 325 }}\r\n                    label='First Name'\r\n                    name='FirstName'\r\n                    placeholder='Enter Your First Name'\r\n                    variant='outlined'\r\n                    onChange={handleChange('firstname')}\r\n                    error={Error.firstname ? true : false}\r\n                    helperText={Error.firstname}\r\n                    required\r\n\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField style={{ minWidth: 325, maxWidth: 325 }}\r\n                    label='Last Name'\r\n                    name='lastname'\r\n                    placeholder='Enter Your Last Name'\r\n                    variant='outlined'\r\n                    onChange={handleChange('lastname')}\r\n                    error={Error.lastname ? true : false}\r\n                    required\r\n                    helperText={Error.lastname}\r\n\r\n                />\r\n\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <TextField style={{ minWidth: 325, maxWidth: 325 }}\r\n                    label='Email'\r\n                    name='email'\r\n                    placeholder='Enter Email'\r\n                    variant=\"outlined\"\r\n                    type='email'\r\n                    onChange={handleChange('email')}\r\n                    error={Error.email ? true : false}\r\n                    required\r\n                    helperText={Error.email}\r\n\r\n                />\r\n\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <FormControl style={{ minWidth: 325, maxWidth: 325 }}\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    error={Error.password ? true : false}\r\n                    required\r\n\r\n                >\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                        Password\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        type={values.showPassword ? \"text\" : \"password\"}\r\n                        value={values.password}\r\n                        onChange={handleChange(\"password\")}\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n                                >\r\n                                    {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                                </IconButton>\r\n                            </InputAdornment>\r\n                        }\r\n                        labelWidth={70}\r\n                    />\r\n                    <FormHelperText id=\"outlined-adornment-password\">\r\n                        {Error.password}\r\n                    </FormHelperText>\r\n                </FormControl>\r\n\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <FormControl style={{ minWidth: 325, maxWidth: 325 }}\r\n                    className={clsx(classes.margin, classes.textField)}\r\n                    variant=\"outlined\"\r\n                    error={Error.Error ? true : false}\r\n                    required\r\n                >\r\n                    <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                        Confirm Password\r\n                    </InputLabel>\r\n                    <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        type={values.showConfirmPassword ? \"text\" : \"password\"}\r\n                        value={values.confirmpassword}\r\n                        onChange={handleChangeConfirmPassword(\"confirmpassword\")}\r\n\r\n                        endAdornment={\r\n                            <InputAdornment position=\"end\">\r\n                                <IconButton\r\n                                    aria-label=\"toggle password visibility\"\r\n                                    onClick={handleClickShowConfirmPassword}\r\n                                    onMouseDown={handleMouseDownPassword}\r\n                                    edge=\"end\"\r\n\r\n                                >\r\n                                    {values.showConfirmPassword ? <Visibility /> : <VisibilityOff />}\r\n                                </IconButton>\r\n\r\n                            </InputAdornment>\r\n\r\n                        }\r\n\r\n                        labelWidth={70}\r\n                    />\r\n                    <FormHelperText id=\"outlined-adornment-password\">\r\n                        {Error.value}\r\n                    </FormHelperText>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Button variant=\"contained\" color=\"primary\" disableElevation size='large' type='submit' disabled={handleDisabled()}> <Link to='/signup' disabled=\"true\">Submit</Link></Button>\r\n\r\n            </Grid>\r\n        </Grid>\r\n\r\n    </React.Fragment >);\r\n}\r\n\r\nexport default SigninFrom;","F:\\project\\signupform\\src\\components\\homepage.jsx",["51","52","53"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst HomePage = () => {\r\n    return (<React.Fragment>\r\n\r\n        <Grid container\r\n            spacing={5}\r\n            justify='center'\r\n        >\r\n            <Grid item xs={12} md={12} lg={12} sm={12}>\r\n                <AppBar position=\"static\" color='primary'>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h6\" >\r\n                            Homepage\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Grid>\r\n            <Grid item xs={12} md={12} lg={12} sm={12}>\r\n\r\n                <Link to='/signin'><Button style={{ justifyContent: 'center' }} variant=\"contained\" color='primary'> Signup</Button></Link>\r\n\r\n            </Grid>\r\n        </Grid>\r\n\r\n\r\n\r\n    </React.Fragment>);\r\n}\r\n\r\nexport default HomePage;","F:\\project\\signupform\\src\\Routes.jsx",["54","55"],"import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\r\nimport HomePage from './components/homepage';\r\nimport App from './App';\r\nimport SigninFrom from './components/sigininform';\r\n\r\n\r\n\r\n\r\n\r\nconst Routes = () => {\r\n    return (\r\n\r\n        <Router>\r\n            <Route exact path='/' component={HomePage} />\r\n            <Route exact path='/signin' component={SigninFrom} />\r\n            <Route exact path='/signup' component={App} />\r\n        </Router>\r\n\r\n    );\r\n}\r\n\r\nexport default Routes;",{"ruleId":"56","severity":1,"message":"57","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":18},{"ruleId":"56","severity":1,"message":"61","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":16},{"ruleId":"56","severity":1,"message":"62","line":7,"column":8,"nodeType":"58","messageId":"59","endLine":7,"endColumn":14},{"ruleId":"56","severity":1,"message":"63","line":8,"column":27,"nodeType":"58","messageId":"59","endLine":8,"endColumn":33},{"ruleId":"56","severity":1,"message":"64","line":8,"column":35,"nodeType":"58","messageId":"59","endLine":8,"endColumn":41},{"ruleId":"56","severity":1,"message":"65","line":8,"column":43,"nodeType":"58","messageId":"59","endLine":8,"endColumn":48},{"ruleId":"56","severity":1,"message":"66","line":8,"column":50,"nodeType":"58","messageId":"59","endLine":8,"endColumn":54},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"56","severity":1,"message":"63","line":16,"column":27,"nodeType":"58","messageId":"59","endLine":16,"endColumn":33},{"ruleId":"56","severity":1,"message":"64","line":16,"column":35,"nodeType":"58","messageId":"59","endLine":16,"endColumn":41},{"ruleId":"56","severity":1,"message":"65","line":16,"column":43,"nodeType":"58","messageId":"59","endLine":16,"endColumn":48},{"ruleId":"56","severity":1,"message":"63","line":4,"column":27,"nodeType":"58","messageId":"59","endLine":4,"endColumn":33},{"ruleId":"56","severity":1,"message":"64","line":4,"column":35,"nodeType":"58","messageId":"59","endLine":4,"endColumn":41},{"ruleId":"56","severity":1,"message":"65","line":4,"column":43,"nodeType":"58","messageId":"59","endLine":4,"endColumn":48},{"ruleId":"56","severity":1,"message":"64","line":2,"column":35,"nodeType":"58","messageId":"59","endLine":2,"endColumn":41},{"ruleId":"56","severity":1,"message":"66","line":2,"column":50,"nodeType":"58","messageId":"59","endLine":2,"endColumn":54},"no-unused-vars","'SigninFrom' is defined but never used.","Identifier","unusedVar","'SignupForm' is defined but never used.","'HomePage' is defined but never used.","'Routes' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-global-assign","no-unsafe-negation"]