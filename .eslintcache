[{"F:\\project\\vibrathon_UI\\signupform\\src\\index.js":"1","F:\\project\\vibrathon_UI\\signupform\\src\\App.js":"2","F:\\project\\vibrathon_UI\\signupform\\src\\components\\signupform.jsx":"3","F:\\project\\vibrathon_UI\\signupform\\src\\components\\companyinfoform.jsx":"4","F:\\project\\vibrathon_UI\\signupform\\src\\components\\foodmanufacturer.jsx":"5"},{"size":202,"mtime":1608742894372,"results":"6","hashOfConfig":"7"},{"size":7328,"mtime":1609485586871,"results":"8","hashOfConfig":"7"},{"size":4221,"mtime":1608744464235,"results":"9","hashOfConfig":"7"},{"size":3496,"mtime":1609485436521,"results":"10","hashOfConfig":"7"},{"size":5769,"mtime":1609477933543,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"17tzjk5",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"F:\\project\\vibrathon_UI\\signupform\\src\\index.js",[],["24","25"],"F:\\project\\vibrathon_UI\\signupform\\src\\App.js",[],"F:\\project\\vibrathon_UI\\signupform\\src\\components\\signupform.jsx",[],"F:\\project\\vibrathon_UI\\signupform\\src\\components\\companyinfoform.jsx",[],"F:\\project\\vibrathon_UI\\signupform\\src\\components\\foodmanufacturer.jsx",["26"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { Button } from '@material-ui/core';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera'\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n\r\n\r\nconst FoodManufacturer = (props) => {\r\n    const { name, handleChangeFood, handleimageupload, nextStep, handledisabledfood, theme, useStyles, submitData } = props\r\n    const { ProductName, ProductDescription } = props.Error\r\n    const classes = useStyles();\r\n\r\n\r\n\r\n    return (\r\n        <body className='image'>\r\n            <ThemeProvider theme={theme}>\r\n                <Grid\r\n                    container\r\n                    spacing={5}\r\n                    direction=\"column\"\r\n                    alignItems=\"center\"\r\n                    justify=\"center\">\r\n\r\n                    <Grid item xs={12}>\r\n                        <Typography variant='h5' color='primary' align='center' gutterBottom >Food Manufacturer</Typography>\r\n                        <Typography color='primary' align='center' gutterBottom>{name}, tell us about your product</Typography><br></br>\r\n\r\n                        <TextField style={{ minWidth: 325, maxWidth: 325 }}\r\n                            label='What is your Product'\r\n                            placeholder='Ex Vrigin Cocunut Oil'\r\n                            variant=\"outlined\"\r\n                            name='ProductName'\r\n                            onChange={handleChangeFood}\r\n                            error={ProductName ? true : false}\r\n                            helperText={ProductName}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField style={{ minWidth: 325, maxWidth: 325 }}\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"Product Description\"\r\n                            name='ProductDescription'\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={handleChangeFood}\r\n                            error={ProductDescription ? true : false}\r\n                            helperText={ProductDescription}\r\n                            variant=\"outlined\"\r\n                            placeholder='Type Something'\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField style={{ minWidth: 325, maxWidth: 325 }}\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"How To Cook\"\r\n                            name='ProductIngredients'\r\n                            multiline\r\n                            rows={4}\r\n\r\n                            onChange={handleChangeFood}\r\n                            variant=\"outlined\"\r\n                            placeholder='Type Something'\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField style={{ minWidth: 325, maxWidth: 325 }}\r\n                            id=\"outlined-multiline-static\"\r\n                            label=\"Nutritional Information\"\r\n                            name='NutritionalInfo'\r\n                            multiline\r\n                            rows={4}\r\n                            onChange={handleChangeFood}\r\n\r\n\r\n                            variant=\"outlined\"\r\n                            placeholder='Type Something'\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n\r\n                        <input\r\n                            accept=\"image/*\"\r\n                            className={classes.input}\r\n                            id=\"contained-button-file\"\r\n                            multiple\r\n                            type=\"file\"\r\n                            name='ProductImage'\r\n                            onChange={handleimageupload}\r\n                        />\r\n                        <label htmlFor=\"contained-button-file\">\r\n                            <Button variant=\"outlined\"\r\n                                color=\"primary\"\r\n                                component=\"span\"\r\n                                style={{ minWidth: 325, maxWidth: 325 }}\r\n                                endIcon={<PhotoCamera />}>\r\n                                Upload Product Image\r\n        </Button>\r\n                        </label>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <TextField style={{ minWidth: 325, maxWidth: 325 }}\r\n                            label='Paste Video Link'\r\n                            variant=\"outlined\"\r\n                            name='VideoLink'\r\n                            onChange={handleChangeFood}\r\n                        />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n\r\n                        <TextField style={{ minWidth: 325, maxWidth: 325 }}\r\n                            label='Video Link Description'\r\n                            variant=\"outlined\"\r\n                            name=\"VideoLinkDescription\"\r\n                            onChange={handleChangeFood}\r\n                        />\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\" disableElevation size='large' disabled={handledisabledfood()} onClick={() => submitData()} className={classes.button}> next</Button>\r\n\r\n                    </Grid>\r\n\r\n\r\n\r\n\r\n\r\n                </Grid>\r\n            </ThemeProvider>\r\n        </body>);\r\n}\r\n\r\nexport default FoodManufacturer;",{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":15,"column":56,"nodeType":"33","messageId":"34","endLine":15,"endColumn":64},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'nextStep' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]